@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <CollectionLazyRender Items=@forecasts ChunkSize=20>
                <tr @ref=@context.ElementReference>
                    <td>@context.Item.Date.ToShortDateString()</td>
                    <td>@context.Item.TemperatureC</td>
                    <td>@context.Item.TemperatureF</td>
                    <td>@context.Item.Summary</td>
                </tr>
            </CollectionLazyRender>
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        var res = forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");

        Random random = new Random();
        forecasts = Enumerable.Range(1, 30000).Select(x => res[random.Next(0, res.Length - 1)]).ToArray();
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
